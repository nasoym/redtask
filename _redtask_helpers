#!/bin/bash

function assert_json() {
  echo "$1" | jq -e '.' >/dev/null 2>&1 && echo "1"
}

function json_lines_to_json_array() {
  local JSON_LINES="$1"
  local IFS=$'\n'
  local LINES_ARRAY=(${JSON_LINES})
  local JSON_ARRAY="["
  local FIRST_ELEMENT=1
  for JSON in "${LINES_ARRAY[@]}"; do
    if [ "$FIRST_ELEMENT" -eq 1 ];then
      FIRST_ELEMENT=0
      JSON_ARRAY="${JSON_ARRAY}${JSON}"
    else
      JSON_ARRAY="${JSON_ARRAY},${JSON}"
    fi
  done
  local JSON_ARRAY="$JSON_ARRAY]"
  echo "$JSON_ARRAY"
}

function write_issue() {
  local ISSUE_ID=$1
  local VALUES=$2
  local CURL_STRING=$(echo "$VALUES" | sed -e "s/^/{'issue':{/g" -e "s/$/}}/g" -e "s/'/\"/g")
  echo "$CURL_STRING" |\
  curl -X PUT -H "Content-type:application/json" -s -3 -d @- "https://${SERVER}/issues/${ISSUE_ID}.json?key=${KEY}"
}

function modify_custom_json() {
  local ID="$1"
  local JSON="$2"  
  local JSON_MODIFICATION="$3"
  local OLD_VALUE=$(echo "$JSON" | jq -r ".description")
  if [ $(assert_json "$OLD_VALUE") ]; then
    #redtask 3126 des "{\\\"hi\\\":4}"
    # $2='.a="4" | .b=5'
    if [ -z "$OLD_VALUE" ];then
      #echo "old description was empty"
      local OLD_VALUE="{}"
    fi
  else
    local OLD_VALUE="{}"
    echo "old description was not a json content" 1>&2
  fi

  local NEW_VALUE=$(echo "$OLD_VALUE" | jq -c "$JSON_MODIFICATION" | sed -e 's/"/\\\"/g')
  #echo "New: $NEW_VALUE" 1>&2
  write_issue $ID "'description':'$NEW_VALUE'"
}

function ids_from_json_array() {
  echo "$(echo "$1" | jq '.[]|.id')"
}

#TODO:
function load_json_content_for_ids() {
  :
}

function parse_custom_json_field() {
  local JSON_CONTENT="$1"
  local CONTENT_IDS="$2"
  for ID in $CONTENT_IDS; do
    local DESCRIPTION=$(echo "$JSON_CONTENT" | jq -r -c ".[]| select(.id==$ID) |.description")
    if [ -n "$DESCRIPTION" ] && [ $(assert_json "$DESCRIPTION") ]; then
      #echo "DESCRIPTION IS JSON" 1>&2
      local JSON_CONTENT=$(echo "$JSON_CONTENT" |\
        jq -c "[.[] | if .id==$ID then .cjson=$DESCRIPTION else . end]"\
        )
    fi
  done
  echo "$JSON_CONTENT" 
}

#TODO:
function load_json_content_of_children() {
  :
}


